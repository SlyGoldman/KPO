using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    { 
        public Form1()
        {
            InitializeComponent();

/* добавляем обработчик события к событию `Validating` для `textBox3`. Событие `Validating` позволет проверить данные на корректность */
            textBox3.Validating += new System.ComponentModel.CancelEventHandler(textBox3_Validating);
        }

// сам обработчик события для значений textBox3
        private void textBox3_Validating(object sender, System.ComponentModel.CancelEventArgs e)
        {
            /* для проверки формата копеек создается объект `Regex` с шаблоном, который соответствует строке с числом, которое может содержать десятичную точку и до двух цифр после неё, что соответствует формату суммы с копейками */
            Regex regex = new Regex(@"^\d+(\.\d{1,2})?$");

            if (!regex.IsMatch(textBox3.Text))
            {
                // сообщение об ошибке, если пользователь накосячил
                MessageBox.Show("Неправильный формат. Введите сумму с точностью до копеек (две цифры после точки).", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                e.Cancel = true; // отмена, если формат неверен
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            //используем метод try-catch, если пользователь накосячит с вводом
     try
            {
                // считывание введенных пользователем значений 
                double totalAmount = double.Parse(textBox3.Text);
                double bondsPercentage = double.Parse(textBox4.Text);
                double realEstatePercentage = double.Parse(textBox5.Text);
                double stocksPercentage = double.Parse(textBox6.Text);

                // Проверка на сумму процентов (не превышает 100%)
                if (bondsPercentage + realEstatePercentage + stocksPercentage != 100)
                {
                    MessageBox.Show("Сумма процентов по акциям, облигациям и недвижимости должна быть равна 100%.", "Ошибка в процентах");
                    return; // метод не выполнится, если проверка не пройдена
                }


                // проценты в доли
                bondsPercentage /= 100;
                realEstatePercentage /= 100;
                stocksPercentage /= 100;

                // распределяем суммы пользователя по активам
                double bondsAmount = totalAmount * bondsPercentage;
                double realEstateAmount = totalAmount * realEstatePercentage;
                double stocksAmount = totalAmount * stocksPercentage;

                // результаты
                textBox7.Text = $"Необходимо купить облигаций на {bondsAmount.ToString("N2")} рублей. Комиссия брокера ноль рублей";
                textBox8.Text = $"Необходимо купить недвижимость на {realEstateAmount.ToString("N2")} рублей. Комиссия брокера 0,05% от сделки";
                textBox9.Text = $"Необходимо купить акций на {stocksAmount.ToString("N2")} рублей. Комиссия брокера ноль рублей";
            }
            
                // сообщения об ошибках, если пользователь косячит
catch (FormatException)
            {
                MessageBox.Show("Пожалуйста, введите числа в правильном формате (используйте точку для десятичных значений).", "Ошибка формата");
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Произошла ошибка: {ex.Message}", "Ошибка");
            }
        }

 // метод вывода текста в текстбоксы, когда кликают по нужной вкладке в tabControl1 
        private void tabControl1_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (tabControl1.SelectedTab == tabControl1.TabPages["tabPage3"])
            {
                textBox2.Text = "Гарри Марковиц был удостоен Нобелевской премии по экономике в 1990 году. Он получил эту высокую награду за разработку теории портфельного отбора, которая стала фундаментом современной теории инвестиций. Его работа позволила инвесторам оптимизировать свои инвестиционные портфели, учитывая как ожидаемую доходность, так и риск. Это было значительным вкладом в область финансов и экономики, поскольку до его исследований не существовало количественного подхода к инвестициям, учитывающего риск. По Г. Марковицу активы распределяются в зависимости от фазы рынка: во время высоких процентных ставок основной упор в инвестиционном портфеле делается на облигации с плавающим купоном. В фазу роста рынка основной упор в инвестиционном портфеле идет на индекс акций в составе страны проживания, а во времена высокой инфляции необходимо добавлять в портфель фонды недвижимости как товарный актив, растущий на величину инфляции в стране проживания. РАСПРЕДЕЛЕНИЕ АКТИВОВ ПО БРОКЕРАМ: в БКС покупать только облигации, так как комиссия брокера за покупку отсутствует и нет комиссий за погашение номинала облигации. В ФИНАМ покупать только недвижиомсть, так как самый выгодный тариф с минимальной комиссией за покупку. За недвижимость у любого брокера будет комиссия, но только здесь она самая минимальная. В ТИНЬКОФФ покупать индекс акций Московской биржи, так как он торгуется у этого брокера без комиссии и управляется лучше других фондов. ПОСЛЕ ПОКУПКИ АКТИВОВ необходимо проверить баланс брокера ФИНАМ через день и пополнить его на размер комиссий";
            }
            else 
            {
                textBox1.Text = "Создание финансовой подушки безопасности является первым и важным шагом перед инвестированием на фондовом рынке по нескольким причинам. 1) Непредвиденные расходы: финансовая подушка обеспечивает защиту от непредвиденных расходов, таких как медицинские счета, ремонт автомобиля или потеря работы. Без этого резерва вам может потребоваться срочно продавать инвестиции, возможно, с убытком. 2) Избегание долгов: если у вас есть сбережения на случай чрезвычайных ситуаций, вы с меньшей вероятностью воспользуетесь кредитными картами или займами, что поможет избежать долгов и процентов по ним. 3) Эмоциональное спокойствие: наличие финансовой подушки снижает стресс и дает уверенность в том, что вы сможете справиться с финансовыми трудностями, не прибегая к продаже инвестиций. Для подушки используй фонд ВИМ-ликвидность, потому что разница в доходности минимальна: сравнивал самые консервативные инвестиции на рынке - фонд на ОФЗ-ИН и ликвидность. Они дают одинаковый результат на длинном промежутке времени. Почему использовать фонд Ликвидность в подушке: среднедневной оборот на бирже за декабрь, по данным управляющей компании ВИМ-инвестиции, превышает 4,7 млрд руб. Фонд входит в топ-5 акций по обороту на бирже наравне с такими эмитентами, как «Сбербанк», «Лукойл», «Мечел» и «Газпром». Активы этого фонда превысили 100 млрд рублей - самый большой портфель активов среди публичных ПИФ в нашей стране, поэтому вероятность дефолта этого фонда минимальна. Плюс данный фонд обслуживается УК ВИМ-Инвестиции, аффилированной с ВТБ-Капитал, что еще больше повышает надежность вложений";
            }
        }

// обработчик событий по нажатию кнопки результатов во вкладке Шаг один 
        private void button2_Click(object sender, EventArgs e)
        {
            if (decimal.TryParse(textBox10.Text, out decimal monthlyExpenses))
            {
             // размер подушки безопасности лучше делать от 3 до 6 месяцев расходов
                decimal minSafetyNet = monthlyExpenses * 3;
                decimal maxSafetyNet = monthlyExpenses * 6;

             // рекомендуемый размер подушки безопасности отображается в textBox11
                textBox11.Text = $"Рекомендуемый размер подушки финансовой безопасности: от {minSafetyNet:N0} до {maxSafetyNet:N0} рублей";
            }
            else
            {
             // если пользователь косячит в очередной раз, то сообщаем об ошибке
                MessageBox.Show("Пожалуйста, введите сумму ежемесячных расходов в числовом формате, используя точку для ввода копеек.", "Ошибка ввода");
            }
        }
    }
}
